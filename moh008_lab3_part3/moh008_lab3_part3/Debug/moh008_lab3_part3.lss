
moh008_lab3_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  000006b2  00000746  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  0080011c  0080011c  00000762  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000762  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000794  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000007d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001264  00000000  00000000  00000894  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a16  00000000  00000000  00001af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000851  00000000  00000000  0000250e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00002d60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000061b  00000000  00000000  00002f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000673  00000000  00000000  00003537  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003baa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	74 c0       	rjmp	.+232    	; 0xee <__bad_interrupt>
   6:	00 00       	nop
   8:	72 c0       	rjmp	.+228    	; 0xee <__bad_interrupt>
   a:	00 00       	nop
   c:	70 c0       	rjmp	.+224    	; 0xee <__bad_interrupt>
   e:	00 00       	nop
  10:	6e c0       	rjmp	.+220    	; 0xee <__bad_interrupt>
  12:	00 00       	nop
  14:	6c c0       	rjmp	.+216    	; 0xee <__bad_interrupt>
  16:	00 00       	nop
  18:	6a c0       	rjmp	.+212    	; 0xee <__bad_interrupt>
  1a:	00 00       	nop
  1c:	68 c0       	rjmp	.+208    	; 0xee <__bad_interrupt>
  1e:	00 00       	nop
  20:	66 c0       	rjmp	.+204    	; 0xee <__bad_interrupt>
  22:	00 00       	nop
  24:	64 c0       	rjmp	.+200    	; 0xee <__bad_interrupt>
  26:	00 00       	nop
  28:	62 c0       	rjmp	.+196    	; 0xee <__bad_interrupt>
  2a:	00 00       	nop
  2c:	60 c0       	rjmp	.+192    	; 0xee <__bad_interrupt>
  2e:	00 00       	nop
  30:	5e c0       	rjmp	.+188    	; 0xee <__bad_interrupt>
  32:	00 00       	nop
  34:	92 c0       	rjmp	.+292    	; 0x15a <__vector_13>
  36:	00 00       	nop
  38:	5a c0       	rjmp	.+180    	; 0xee <__bad_interrupt>
  3a:	00 00       	nop
  3c:	58 c0       	rjmp	.+176    	; 0xee <__bad_interrupt>
  3e:	00 00       	nop
  40:	56 c0       	rjmp	.+172    	; 0xee <__bad_interrupt>
  42:	00 00       	nop
  44:	54 c0       	rjmp	.+168    	; 0xee <__bad_interrupt>
  46:	00 00       	nop
  48:	52 c0       	rjmp	.+164    	; 0xee <__bad_interrupt>
  4a:	00 00       	nop
  4c:	50 c0       	rjmp	.+160    	; 0xee <__bad_interrupt>
  4e:	00 00       	nop
  50:	4e c0       	rjmp	.+156    	; 0xee <__bad_interrupt>
  52:	00 00       	nop
  54:	4c c0       	rjmp	.+152    	; 0xee <__bad_interrupt>
  56:	00 00       	nop
  58:	4a c0       	rjmp	.+148    	; 0xee <__bad_interrupt>
  5a:	00 00       	nop
  5c:	48 c0       	rjmp	.+144    	; 0xee <__bad_interrupt>
  5e:	00 00       	nop
  60:	46 c0       	rjmp	.+140    	; 0xee <__bad_interrupt>
  62:	00 00       	nop
  64:	44 c0       	rjmp	.+136    	; 0xee <__bad_interrupt>
  66:	00 00       	nop
  68:	42 c0       	rjmp	.+132    	; 0xee <__bad_interrupt>
  6a:	00 00       	nop
  6c:	40 c0       	rjmp	.+128    	; 0xee <__bad_interrupt>
  6e:	00 00       	nop
  70:	3e c0       	rjmp	.+124    	; 0xee <__bad_interrupt>
  72:	00 00       	nop
  74:	3c c0       	rjmp	.+120    	; 0xee <__bad_interrupt>
  76:	00 00       	nop
  78:	3a c0       	rjmp	.+116    	; 0xee <__bad_interrupt>
  7a:	00 00       	nop
  7c:	38 c0       	rjmp	.+112    	; 0xee <__bad_interrupt>
  7e:	00 00       	nop
  80:	36 c0       	rjmp	.+108    	; 0xee <__bad_interrupt>
  82:	00 00       	nop
  84:	34 c0       	rjmp	.+104    	; 0xee <__bad_interrupt>
  86:	00 00       	nop
  88:	32 c0       	rjmp	.+100    	; 0xee <__bad_interrupt>
  8a:	00 00       	nop
  8c:	d2 01       	movw	r26, r4
  8e:	df 01       	movw	r26, r30
  90:	ec 01       	movw	r28, r24
  92:	f9 01       	movw	r30, r18
  94:	06 02       	muls	r16, r22
  96:	13 02       	muls	r17, r19
  98:	20 02       	muls	r18, r16
  9a:	27 02       	muls	r18, r23
  9c:	2e 02       	muls	r18, r30
  9e:	68 02       	muls	r22, r24
  a0:	68 02       	muls	r22, r24
  a2:	68 02       	muls	r22, r24
  a4:	68 02       	muls	r22, r24
  a6:	68 02       	muls	r22, r24
  a8:	68 02       	muls	r22, r24
  aa:	68 02       	muls	r22, r24
  ac:	35 02       	muls	r19, r21
  ae:	42 02       	muls	r20, r18
  b0:	4f 02       	muls	r20, r31
  b2:	5c 02       	muls	r21, r28

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d0 e4       	ldi	r29, 0x40	; 64
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e2 eb       	ldi	r30, 0xB2	; 178
  c8:	f6 e0       	ldi	r31, 0x06	; 6
  ca:	00 e0       	ldi	r16, 0x00	; 0
  cc:	0b bf       	out	0x3b, r16	; 59
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <__do_copy_data+0x14>
  d0:	07 90       	elpm	r0, Z+
  d2:	0d 92       	st	X+, r0
  d4:	ac 31       	cpi	r26, 0x1C	; 28
  d6:	b1 07       	cpc	r27, r17
  d8:	d9 f7       	brne	.-10     	; 0xd0 <__do_copy_data+0x10>

000000da <__do_clear_bss>:
  da:	21 e0       	ldi	r18, 0x01	; 1
  dc:	ac e1       	ldi	r26, 0x1C	; 28
  de:	b1 e0       	ldi	r27, 0x01	; 1
  e0:	01 c0       	rjmp	.+2      	; 0xe4 <.do_clear_bss_start>

000000e2 <.do_clear_bss_loop>:
  e2:	1d 92       	st	X+, r1

000000e4 <.do_clear_bss_start>:
  e4:	aa 33       	cpi	r26, 0x3A	; 58
  e6:	b2 07       	cpc	r27, r18
  e8:	e1 f7       	brne	.-8      	; 0xe2 <.do_clear_bss_loop>
  ea:	fd d1       	rcall	.+1018   	; 0x4e6 <main>
  ec:	e0 c2       	rjmp	.+1472   	; 0x6ae <_exit>

000000ee <__bad_interrupt>:
  ee:	88 cf       	rjmp	.-240    	; 0x0 <__vectors>

000000f0 <TimerSet>:
		if (c==0){return b;}
			a = b;
			b = c;
	}
	return 0;
}
  f0:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
  f4:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
  f8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
  fc:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
 100:	60 93 35 01 	sts	0x0135, r22	; 0x800135 <_avr_timer_cntcurr>
 104:	70 93 36 01 	sts	0x0136, r23	; 0x800136 <_avr_timer_cntcurr+0x1>
 108:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <_avr_timer_cntcurr+0x2>
 10c:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <_avr_timer_cntcurr+0x3>
 110:	08 95       	ret

00000112 <TimerOn>:
 112:	8b e0       	ldi	r24, 0x0B	; 11
 114:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 118:	8d e7       	ldi	r24, 0x7D	; 125
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 120:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 12a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 12e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 132:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 136:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 13a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 13e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 142:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <_avr_timer_cntcurr>
 146:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <_avr_timer_cntcurr+0x1>
 14a:	a0 93 37 01 	sts	0x0137, r26	; 0x800137 <_avr_timer_cntcurr+0x2>
 14e:	b0 93 38 01 	sts	0x0138, r27	; 0x800138 <_avr_timer_cntcurr+0x3>
 152:	8f b7       	in	r24, 0x3f	; 63
 154:	80 68       	ori	r24, 0x80	; 128
 156:	8f bf       	out	0x3f, r24	; 63
 158:	08 95       	ret

0000015a <__vector_13>:
 15a:	1f 92       	push	r1
 15c:	0f 92       	push	r0
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	0f 92       	push	r0
 162:	11 24       	eor	r1, r1
 164:	8f 93       	push	r24
 166:	9f 93       	push	r25
 168:	af 93       	push	r26
 16a:	bf 93       	push	r27
 16c:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <_avr_timer_cntcurr>
 170:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <_avr_timer_cntcurr+0x1>
 174:	a0 91 37 01 	lds	r26, 0x0137	; 0x800137 <_avr_timer_cntcurr+0x2>
 178:	b0 91 38 01 	lds	r27, 0x0138	; 0x800138 <_avr_timer_cntcurr+0x3>
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	a1 09       	sbc	r26, r1
 180:	b1 09       	sbc	r27, r1
 182:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <_avr_timer_cntcurr>
 186:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <_avr_timer_cntcurr+0x1>
 18a:	a0 93 37 01 	sts	0x0137, r26	; 0x800137 <_avr_timer_cntcurr+0x2>
 18e:	b0 93 38 01 	sts	0x0138, r27	; 0x800138 <_avr_timer_cntcurr+0x3>
 192:	89 2b       	or	r24, r25
 194:	8a 2b       	or	r24, r26
 196:	8b 2b       	or	r24, r27
 198:	99 f4       	brne	.+38     	; 0x1c0 <__vector_13+0x66>
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <TimerFlag>
 1a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1a4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1a8:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1ac:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1b0:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <_avr_timer_cntcurr>
 1b4:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <_avr_timer_cntcurr+0x1>
 1b8:	a0 93 37 01 	sts	0x0137, r26	; 0x800137 <_avr_timer_cntcurr+0x2>
 1bc:	b0 93 38 01 	sts	0x0138, r27	; 0x800138 <_avr_timer_cntcurr+0x3>
 1c0:	bf 91       	pop	r27
 1c2:	af 91       	pop	r26
 1c4:	9f 91       	pop	r25
 1c6:	8f 91       	pop	r24
 1c8:	0f 90       	pop	r0
 1ca:	0f be       	out	0x3f, r0	; 63
 1cc:	0f 90       	pop	r0
 1ce:	1f 90       	pop	r1
 1d0:	18 95       	reti

000001d2 <GetKeypadKey>:
 1d2:	8f ee       	ldi	r24, 0xEF	; 239
 1d4:	82 b9       	out	0x02, r24	; 2
 1d6:	00 00       	nop
 1d8:	00 9b       	sbis	0x00, 0	; 0
 1da:	29 c0       	rjmp	.+82     	; 0x22e <GetKeypadKey+0x5c>
 1dc:	01 9b       	sbis	0x00, 1	; 0
 1de:	29 c0       	rjmp	.+82     	; 0x232 <GetKeypadKey+0x60>
 1e0:	02 9b       	sbis	0x00, 2	; 0
 1e2:	29 c0       	rjmp	.+82     	; 0x236 <GetKeypadKey+0x64>
 1e4:	03 9b       	sbis	0x00, 3	; 0
 1e6:	29 c0       	rjmp	.+82     	; 0x23a <GetKeypadKey+0x68>
 1e8:	8f ed       	ldi	r24, 0xDF	; 223
 1ea:	82 b9       	out	0x02, r24	; 2
 1ec:	00 00       	nop
 1ee:	00 9b       	sbis	0x00, 0	; 0
 1f0:	26 c0       	rjmp	.+76     	; 0x23e <GetKeypadKey+0x6c>
 1f2:	01 9b       	sbis	0x00, 1	; 0
 1f4:	26 c0       	rjmp	.+76     	; 0x242 <GetKeypadKey+0x70>
 1f6:	02 9b       	sbis	0x00, 2	; 0
 1f8:	26 c0       	rjmp	.+76     	; 0x246 <GetKeypadKey+0x74>
 1fa:	03 9b       	sbis	0x00, 3	; 0
 1fc:	26 c0       	rjmp	.+76     	; 0x24a <GetKeypadKey+0x78>
 1fe:	8f eb       	ldi	r24, 0xBF	; 191
 200:	82 b9       	out	0x02, r24	; 2
 202:	00 00       	nop
 204:	00 9b       	sbis	0x00, 0	; 0
 206:	23 c0       	rjmp	.+70     	; 0x24e <GetKeypadKey+0x7c>
 208:	01 9b       	sbis	0x00, 1	; 0
 20a:	23 c0       	rjmp	.+70     	; 0x252 <GetKeypadKey+0x80>
 20c:	02 9b       	sbis	0x00, 2	; 0
 20e:	23 c0       	rjmp	.+70     	; 0x256 <GetKeypadKey+0x84>
 210:	03 9b       	sbis	0x00, 3	; 0
 212:	23 c0       	rjmp	.+70     	; 0x25a <GetKeypadKey+0x88>
 214:	8f e7       	ldi	r24, 0x7F	; 127
 216:	82 b9       	out	0x02, r24	; 2
 218:	00 00       	nop
 21a:	00 9b       	sbis	0x00, 0	; 0
 21c:	20 c0       	rjmp	.+64     	; 0x25e <GetKeypadKey+0x8c>
 21e:	01 9b       	sbis	0x00, 1	; 0
 220:	20 c0       	rjmp	.+64     	; 0x262 <GetKeypadKey+0x90>
 222:	02 9b       	sbis	0x00, 2	; 0
 224:	20 c0       	rjmp	.+64     	; 0x266 <GetKeypadKey+0x94>
 226:	03 9b       	sbis	0x00, 3	; 0
 228:	20 c0       	rjmp	.+64     	; 0x26a <GetKeypadKey+0x98>
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	08 95       	ret
 22e:	81 e3       	ldi	r24, 0x31	; 49
 230:	08 95       	ret
 232:	84 e3       	ldi	r24, 0x34	; 52
 234:	08 95       	ret
 236:	87 e3       	ldi	r24, 0x37	; 55
 238:	08 95       	ret
 23a:	8a e2       	ldi	r24, 0x2A	; 42
 23c:	08 95       	ret
 23e:	82 e3       	ldi	r24, 0x32	; 50
 240:	08 95       	ret
 242:	85 e3       	ldi	r24, 0x35	; 53
 244:	08 95       	ret
 246:	88 e3       	ldi	r24, 0x38	; 56
 248:	08 95       	ret
 24a:	80 e3       	ldi	r24, 0x30	; 48
 24c:	08 95       	ret
 24e:	83 e3       	ldi	r24, 0x33	; 51
 250:	08 95       	ret
 252:	86 e3       	ldi	r24, 0x36	; 54
 254:	08 95       	ret
 256:	89 e3       	ldi	r24, 0x39	; 57
 258:	08 95       	ret
 25a:	83 e2       	ldi	r24, 0x23	; 35
 25c:	08 95       	ret
 25e:	81 e4       	ldi	r24, 0x41	; 65
 260:	08 95       	ret
 262:	82 e4       	ldi	r24, 0x42	; 66
 264:	08 95       	ret
 266:	83 e4       	ldi	r24, 0x43	; 67
 268:	08 95       	ret
 26a:	84 e4       	ldi	r24, 0x44	; 68
 26c:	08 95       	ret

0000026e <SMTick1>:
 26e:	b1 df       	rcall	.-158    	; 0x1d2 <GetKeypadKey>
 270:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <x>
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	08 95       	ret

00000278 <delay_ms>:
 278:	18 16       	cp	r1, r24
 27a:	19 06       	cpc	r1, r25
 27c:	5c f0       	brlt	.+22     	; 0x294 <delay_ms+0x1c>
 27e:	08 95       	ret
 280:	00 00       	nop
 282:	21 50       	subi	r18, 0x01	; 1
 284:	31 09       	sbc	r19, r1
 286:	e1 f7       	brne	.-8      	; 0x280 <delay_ms+0x8>
 288:	4f 5f       	subi	r20, 0xFF	; 255
 28a:	5f 4f       	sbci	r21, 0xFF	; 255
 28c:	84 17       	cp	r24, r20
 28e:	95 07       	cpc	r25, r21
 290:	19 f4       	brne	.+6      	; 0x298 <delay_ms+0x20>
 292:	08 95       	ret
 294:	40 e0       	ldi	r20, 0x00	; 0
 296:	50 e0       	ldi	r21, 0x00	; 0
 298:	27 e0       	ldi	r18, 0x07	; 7
 29a:	33 e0       	ldi	r19, 0x03	; 3
 29c:	f1 cf       	rjmp	.-30     	; 0x280 <delay_ms+0x8>

0000029e <LCD_WriteCommand>:
 29e:	5e 98       	cbi	0x0b, 6	; 11
 2a0:	88 b9       	out	0x08, r24	; 8
 2a2:	5f 9a       	sbi	0x0b, 7	; 11
 2a4:	00 00       	nop
 2a6:	5f 98       	cbi	0x0b, 7	; 11
 2a8:	82 e0       	ldi	r24, 0x02	; 2
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	e5 cf       	rjmp	.-54     	; 0x278 <delay_ms>
 2ae:	08 95       	ret

000002b0 <LCD_ClearScreen>:
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	f5 cf       	rjmp	.-22     	; 0x29e <LCD_WriteCommand>
 2b4:	08 95       	ret

000002b6 <LCD_init>:
 2b6:	84 e6       	ldi	r24, 0x64	; 100
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	de df       	rcall	.-68     	; 0x278 <delay_ms>
 2bc:	88 e3       	ldi	r24, 0x38	; 56
 2be:	ef df       	rcall	.-34     	; 0x29e <LCD_WriteCommand>
 2c0:	86 e0       	ldi	r24, 0x06	; 6
 2c2:	ed df       	rcall	.-38     	; 0x29e <LCD_WriteCommand>
 2c4:	8f e0       	ldi	r24, 0x0F	; 15
 2c6:	eb df       	rcall	.-42     	; 0x29e <LCD_WriteCommand>
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	e9 df       	rcall	.-46     	; 0x29e <LCD_WriteCommand>
 2cc:	8a e0       	ldi	r24, 0x0A	; 10
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	d3 cf       	rjmp	.-90     	; 0x278 <delay_ms>
 2d2:	08 95       	ret

000002d4 <LCD_WriteData>:
 2d4:	5e 9a       	sbi	0x0b, 6	; 11
 2d6:	88 b9       	out	0x08, r24	; 8
 2d8:	5f 9a       	sbi	0x0b, 7	; 11
 2da:	00 00       	nop
 2dc:	5f 98       	cbi	0x0b, 7	; 11
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	ca cf       	rjmp	.-108    	; 0x278 <delay_ms>
 2e4:	08 95       	ret

000002e6 <LCD_Cursor>:
 2e6:	81 31       	cpi	r24, 0x11	; 17
 2e8:	18 f4       	brcc	.+6      	; 0x2f0 <LCD_Cursor+0xa>
 2ea:	81 58       	subi	r24, 0x81	; 129
 2ec:	d8 cf       	rjmp	.-80     	; 0x29e <LCD_WriteCommand>
 2ee:	08 95       	ret
 2f0:	81 55       	subi	r24, 0x51	; 81
 2f2:	d5 cf       	rjmp	.-86     	; 0x29e <LCD_WriteCommand>
 2f4:	08 95       	ret

000002f6 <LCD_DisplayString>:
 2f6:	0f 93       	push	r16
 2f8:	1f 93       	push	r17
 2fa:	cf 93       	push	r28
 2fc:	df 93       	push	r29
 2fe:	18 2f       	mov	r17, r24
 300:	eb 01       	movw	r28, r22
 302:	d6 df       	rcall	.-84     	; 0x2b0 <LCD_ClearScreen>
 304:	88 81       	ld	r24, Y
 306:	88 23       	and	r24, r24
 308:	51 f0       	breq	.+20     	; 0x31e <LCD_DisplayString+0x28>
 30a:	01 e0       	ldi	r16, 0x01	; 1
 30c:	01 0f       	add	r16, r17
 30e:	81 2f       	mov	r24, r17
 310:	ea df       	rcall	.-44     	; 0x2e6 <LCD_Cursor>
 312:	89 91       	ld	r24, Y+
 314:	df df       	rcall	.-66     	; 0x2d4 <LCD_WriteData>
 316:	10 2f       	mov	r17, r16
 318:	88 81       	ld	r24, Y
 31a:	81 11       	cpse	r24, r1
 31c:	f6 cf       	rjmp	.-20     	; 0x30a <LCD_DisplayString+0x14>
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	1f 91       	pop	r17
 324:	0f 91       	pop	r16
 326:	08 95       	ret

00000328 <SPI_MasterInit>:
 328:	80 eb       	ldi	r24, 0xB0	; 176
 32a:	84 b9       	out	0x04, r24	; 4
 32c:	80 e4       	ldi	r24, 0x40	; 64
 32e:	85 b9       	out	0x05, r24	; 5
 330:	81 e5       	ldi	r24, 0x51	; 81
 332:	8c bd       	out	0x2c, r24	; 44
 334:	80 e8       	ldi	r24, 0x80	; 128
 336:	8f bf       	out	0x3f, r24	; 63
 338:	08 95       	ret

0000033a <SPI_MasterTransmit>:
 33a:	8e bd       	out	0x2e, r24	; 46
 33c:	85 b1       	in	r24, 0x05	; 5
 33e:	0d b4       	in	r0, 0x2d	; 45
 340:	07 fe       	sbrs	r0, 7
 342:	fd cf       	rjmp	.-6      	; 0x33e <SPI_MasterTransmit+0x4>
 344:	85 b1       	in	r24, 0x05	; 5
 346:	08 95       	ret

00000348 <SMTick2>:
 348:	00 97       	sbiw	r24, 0x00	; 0
 34a:	19 f0       	breq	.+6      	; 0x352 <SMTick2+0xa>
 34c:	01 97       	sbiw	r24, 0x01	; 1
 34e:	91 f4       	brne	.+36     	; 0x374 <SMTick2+0x2c>
 350:	bf c0       	rjmp	.+382    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 352:	e0 91 33 01 	lds	r30, 0x0133	; 0x800133 <x>
 356:	8f eb       	ldi	r24, 0xBF	; 191
 358:	8e 0f       	add	r24, r30
 35a:	84 30       	cpi	r24, 0x04	; 4
 35c:	c0 f0       	brcs	.+48     	; 0x38e <SMTick2+0x46>
 35e:	ea 32       	cpi	r30, 0x2A	; 42
 360:	09 f4       	brne	.+2      	; 0x364 <SMTick2+0x1c>
 362:	b6 c0       	rjmp	.+364    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 364:	80 ed       	ldi	r24, 0xD0	; 208
 366:	8e 0f       	add	r24, r30
 368:	8a 30       	cpi	r24, 0x0A	; 10
 36a:	88 f0       	brcs	.+34     	; 0x38e <SMTick2+0x46>
 36c:	e3 32       	cpi	r30, 0x23	; 35
 36e:	09 f0       	breq	.+2      	; 0x372 <SMTick2+0x2a>
 370:	b7 c0       	rjmp	.+366    	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 372:	ae c0       	rjmp	.+348    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 374:	64 e0       	ldi	r22, 0x04	; 4
 376:	71 e0       	ldi	r23, 0x01	; 1
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	bd df       	rcall	.-134    	; 0x2f6 <LCD_DisplayString>
 37c:	80 e2       	ldi	r24, 0x20	; 32
 37e:	b3 df       	rcall	.-154    	; 0x2e6 <LCD_Cursor>
 380:	81 e1       	ldi	r24, 0x11	; 17
 382:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 386:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <data>
 38a:	8b b9       	out	0x0b, r24	; 11
 38c:	a9 c0       	rjmp	.+338    	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 38e:	8e 2f       	mov	r24, r30
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	fc 01       	movw	r30, r24
 394:	f1 97       	sbiw	r30, 0x31	; 49
 396:	e4 31       	cpi	r30, 0x14	; 20
 398:	f1 05       	cpc	r31, r1
 39a:	08 f0       	brcs	.+2      	; 0x39e <SMTick2+0x56>
 39c:	99 c0       	rjmp	.+306    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 39e:	ea 5b       	subi	r30, 0xBA	; 186
 3a0:	ff 4f       	sbci	r31, 0xFF	; 255
 3a2:	7c c1       	rjmp	.+760    	; 0x69c <__tablejump2__>
 3a4:	8f e0       	ldi	r24, 0x0F	; 15
 3a6:	9f df       	rcall	.-194    	; 0x2e6 <LCD_Cursor>
 3a8:	81 e3       	ldi	r24, 0x31	; 49
 3aa:	94 df       	rcall	.-216    	; 0x2d4 <LCD_WriteData>
 3ac:	80 e2       	ldi	r24, 0x20	; 32
 3ae:	9b df       	rcall	.-202    	; 0x2e6 <LCD_Cursor>
 3b0:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 3b4:	80 7f       	andi	r24, 0xF0	; 240
 3b6:	81 60       	ori	r24, 0x01	; 1
 3b8:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 3bc:	89 c0       	rjmp	.+274    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 3be:	8f e0       	ldi	r24, 0x0F	; 15
 3c0:	92 df       	rcall	.-220    	; 0x2e6 <LCD_Cursor>
 3c2:	82 e3       	ldi	r24, 0x32	; 50
 3c4:	87 df       	rcall	.-242    	; 0x2d4 <LCD_WriteData>
 3c6:	80 e2       	ldi	r24, 0x20	; 32
 3c8:	8e df       	rcall	.-228    	; 0x2e6 <LCD_Cursor>
 3ca:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 3ce:	80 7f       	andi	r24, 0xF0	; 240
 3d0:	82 60       	ori	r24, 0x02	; 2
 3d2:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 3d6:	7c c0       	rjmp	.+248    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 3d8:	8f e0       	ldi	r24, 0x0F	; 15
 3da:	85 df       	rcall	.-246    	; 0x2e6 <LCD_Cursor>
 3dc:	83 e3       	ldi	r24, 0x33	; 51
 3de:	7a df       	rcall	.-268    	; 0x2d4 <LCD_WriteData>
 3e0:	80 e2       	ldi	r24, 0x20	; 32
 3e2:	81 df       	rcall	.-254    	; 0x2e6 <LCD_Cursor>
 3e4:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 3e8:	80 7f       	andi	r24, 0xF0	; 240
 3ea:	83 60       	ori	r24, 0x03	; 3
 3ec:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 3f0:	6f c0       	rjmp	.+222    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 3f2:	8f e0       	ldi	r24, 0x0F	; 15
 3f4:	78 df       	rcall	.-272    	; 0x2e6 <LCD_Cursor>
 3f6:	84 e3       	ldi	r24, 0x34	; 52
 3f8:	6d df       	rcall	.-294    	; 0x2d4 <LCD_WriteData>
 3fa:	80 e2       	ldi	r24, 0x20	; 32
 3fc:	74 df       	rcall	.-280    	; 0x2e6 <LCD_Cursor>
 3fe:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 402:	80 7f       	andi	r24, 0xF0	; 240
 404:	84 60       	ori	r24, 0x04	; 4
 406:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 40a:	62 c0       	rjmp	.+196    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 40c:	8f e0       	ldi	r24, 0x0F	; 15
 40e:	6b df       	rcall	.-298    	; 0x2e6 <LCD_Cursor>
 410:	85 e3       	ldi	r24, 0x35	; 53
 412:	60 df       	rcall	.-320    	; 0x2d4 <LCD_WriteData>
 414:	80 e2       	ldi	r24, 0x20	; 32
 416:	67 df       	rcall	.-306    	; 0x2e6 <LCD_Cursor>
 418:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 41c:	80 7f       	andi	r24, 0xF0	; 240
 41e:	85 60       	ori	r24, 0x05	; 5
 420:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 424:	55 c0       	rjmp	.+170    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 426:	8f e0       	ldi	r24, 0x0F	; 15
 428:	5e df       	rcall	.-324    	; 0x2e6 <LCD_Cursor>
 42a:	86 e3       	ldi	r24, 0x36	; 54
 42c:	53 df       	rcall	.-346    	; 0x2d4 <LCD_WriteData>
 42e:	80 e2       	ldi	r24, 0x20	; 32
 430:	5a df       	rcall	.-332    	; 0x2e6 <LCD_Cursor>
 432:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 436:	80 7f       	andi	r24, 0xF0	; 240
 438:	86 60       	ori	r24, 0x06	; 6
 43a:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 43e:	48 c0       	rjmp	.+144    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 440:	85 e1       	ldi	r24, 0x15	; 21
 442:	51 df       	rcall	.-350    	; 0x2e6 <LCD_Cursor>
 444:	81 e3       	ldi	r24, 0x31	; 49
 446:	46 df       	rcall	.-372    	; 0x2d4 <LCD_WriteData>
 448:	80 e2       	ldi	r24, 0x20	; 32
 44a:	4d df       	rcall	.-358    	; 0x2e6 <LCD_Cursor>
 44c:	41 c0       	rjmp	.+130    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 44e:	85 e1       	ldi	r24, 0x15	; 21
 450:	4a df       	rcall	.-364    	; 0x2e6 <LCD_Cursor>
 452:	82 e3       	ldi	r24, 0x32	; 50
 454:	3f df       	rcall	.-386    	; 0x2d4 <LCD_WriteData>
 456:	80 e2       	ldi	r24, 0x20	; 32
 458:	46 df       	rcall	.-372    	; 0x2e6 <LCD_Cursor>
 45a:	3a c0       	rjmp	.+116    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 45c:	85 e1       	ldi	r24, 0x15	; 21
 45e:	43 df       	rcall	.-378    	; 0x2e6 <LCD_Cursor>
 460:	83 e3       	ldi	r24, 0x33	; 51
 462:	38 df       	rcall	.-400    	; 0x2d4 <LCD_WriteData>
 464:	80 e2       	ldi	r24, 0x20	; 32
 466:	3f df       	rcall	.-386    	; 0x2e6 <LCD_Cursor>
 468:	33 c0       	rjmp	.+102    	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 46a:	87 e0       	ldi	r24, 0x07	; 7
 46c:	3c df       	rcall	.-392    	; 0x2e6 <LCD_Cursor>
 46e:	81 e3       	ldi	r24, 0x31	; 49
 470:	31 df       	rcall	.-414    	; 0x2d4 <LCD_WriteData>
 472:	80 e2       	ldi	r24, 0x20	; 32
 474:	38 df       	rcall	.-400    	; 0x2e6 <LCD_Cursor>
 476:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 47a:	8f 70       	andi	r24, 0x0F	; 15
 47c:	80 61       	ori	r24, 0x10	; 16
 47e:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 482:	26 c0       	rjmp	.+76     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 484:	87 e0       	ldi	r24, 0x07	; 7
 486:	2f df       	rcall	.-418    	; 0x2e6 <LCD_Cursor>
 488:	82 e3       	ldi	r24, 0x32	; 50
 48a:	24 df       	rcall	.-440    	; 0x2d4 <LCD_WriteData>
 48c:	80 e2       	ldi	r24, 0x20	; 32
 48e:	2b df       	rcall	.-426    	; 0x2e6 <LCD_Cursor>
 490:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 494:	8f 70       	andi	r24, 0x0F	; 15
 496:	80 62       	ori	r24, 0x20	; 32
 498:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 49c:	19 c0       	rjmp	.+50     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 49e:	87 e0       	ldi	r24, 0x07	; 7
 4a0:	22 df       	rcall	.-444    	; 0x2e6 <LCD_Cursor>
 4a2:	83 e3       	ldi	r24, 0x33	; 51
 4a4:	17 df       	rcall	.-466    	; 0x2d4 <LCD_WriteData>
 4a6:	80 e2       	ldi	r24, 0x20	; 32
 4a8:	1e df       	rcall	.-452    	; 0x2e6 <LCD_Cursor>
 4aa:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 4ae:	8f 70       	andi	r24, 0x0F	; 15
 4b0:	80 63       	ori	r24, 0x30	; 48
 4b2:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 4b6:	0c c0       	rjmp	.+24     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4b8:	87 e0       	ldi	r24, 0x07	; 7
 4ba:	15 df       	rcall	.-470    	; 0x2e6 <LCD_Cursor>
 4bc:	84 e3       	ldi	r24, 0x34	; 52
 4be:	0a df       	rcall	.-492    	; 0x2d4 <LCD_WriteData>
 4c0:	80 e2       	ldi	r24, 0x20	; 32
 4c2:	11 df       	rcall	.-478    	; 0x2e6 <LCD_Cursor>
 4c4:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 4c8:	8f 70       	andi	r24, 0x0F	; 15
 4ca:	80 64       	ori	r24, 0x40	; 64
 4cc:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tmpdata>
 4d0:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tmpdata>
 4d4:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <data>
 4d8:	8b b9       	out	0x0b, r24	; 11
 4da:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <data>
 4de:	2d df       	rcall	.-422    	; 0x33a <SPI_MasterTransmit>
 4e0:	80 e0       	ldi	r24, 0x00	; 0
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	08 95       	ret

000004e6 <main>:
	}
	return 0;
}

int main(void)
{
 4e6:	cf 93       	push	r28
 4e8:	df 93       	push	r29
 4ea:	00 d0       	rcall	.+0      	; 0x4ec <main+0x6>
 4ec:	00 d0       	rcall	.+0      	; 0x4ee <main+0x8>
 4ee:	cd b7       	in	r28, 0x3d	; 61
 4f0:	de b7       	in	r29, 0x3e	; 62
    DDRA = 0xF0; PORTA = 0x0F;
 4f2:	80 ef       	ldi	r24, 0xF0	; 240
 4f4:	81 b9       	out	0x01, r24	; 1
 4f6:	8f e0       	ldi	r24, 0x0F	; 15
 4f8:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00;
 4fa:	8f ef       	ldi	r24, 0xFF	; 255
 4fc:	87 b9       	out	0x07, r24	; 7
 4fe:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00;
 500:	8a b9       	out	0x0a, r24	; 10
 502:	1b b8       	out	0x0b, r1	; 11
	LCD_init();
 504:	d8 de       	rcall	.-592    	; 0x2b6 <LCD_init>
	SPI_MasterInit();
 506:	10 df       	rcall	.-480    	; 0x328 <SPI_MasterInit>
 508:	0f 2e       	mov	r0, r31
 50a:	f2 e3       	ldi	r31, 0x32	; 50
 50c:	ef 2e       	mov	r14, r31
 50e:	f0 2d       	mov	r31, r0
 510:	f1 2c       	mov	r15, r1
 512:	00 e0       	ldi	r16, 0x00	; 0
 514:	10 e0       	ldi	r17, 0x00	; 0
 516:	5a e0       	ldi	r21, 0x0A	; 10
 518:	40 e0       	ldi	r20, 0x00	; 0
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	20 e0       	ldi	r18, 0x00	; 0
 51e:	04 c0       	rjmp	.+8      	; 0x528 <main+0x42>
 520:	e6 2e       	mov	r14, r22
	unsigned long int c;
	while(1){
		c = a%b;
		if (c==0){return b;}
			a = b;
			b = c;
 522:	f7 2e       	mov	r15, r23
 524:	08 2f       	mov	r16, r24
 526:	19 2f       	mov	r17, r25
 528:	65 2f       	mov	r22, r21

unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 52a:	74 2f       	mov	r23, r20
 52c:	83 2f       	mov	r24, r19
 52e:	92 2f       	mov	r25, r18
 530:	2e 2d       	mov	r18, r14
 532:	3f 2d       	mov	r19, r15
 534:	40 2f       	mov	r20, r16
 536:	51 2f       	mov	r21, r17
 538:	8f d0       	rcall	.+286    	; 0x658 <__udivmodsi4>
 53a:	5e 2d       	mov	r21, r14
 53c:	4f 2d       	mov	r20, r15
 53e:	30 2f       	mov	r19, r16
 540:	21 2f       	mov	r18, r17
 542:	61 15       	cp	r22, r1
		if (c==0){return b;}
 544:	71 05       	cpc	r23, r1
 546:	81 05       	cpc	r24, r1
 548:	91 05       	cpc	r25, r1
 54a:	51 f7       	brne	.-44     	; 0x520 <main+0x3a>
 54c:	6a e0       	ldi	r22, 0x0A	; 10
	
	unsigned long int tmpGCD = 1;
	tmpGCD  = findGCD(SMTick1_calc, SMTick2_calc);
	
	unsigned long int GCD = tmpGCD;
	unsigned long int SMTick1_period = SMTick1_calc/GCD;
 54e:	70 e0       	ldi	r23, 0x00	; 0
 550:	80 e0       	ldi	r24, 0x00	; 0
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	2e 2d       	mov	r18, r14
 556:	3f 2d       	mov	r19, r15
 558:	40 2f       	mov	r20, r16
 55a:	51 2f       	mov	r21, r17
 55c:	7d d0       	rcall	.+250    	; 0x658 <__udivmodsi4>
 55e:	49 01       	movw	r8, r18
 560:	5a 01       	movw	r10, r20
 562:	62 e3       	ldi	r22, 0x32	; 50
	unsigned long int SMTick2_period = SMTick2_calc/GCD;
 564:	70 e0       	ldi	r23, 0x00	; 0
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	2e 2d       	mov	r18, r14
 56c:	3f 2d       	mov	r19, r15
 56e:	40 2f       	mov	r20, r16
 570:	51 2f       	mov	r21, r17
 572:	72 d0       	rcall	.+228    	; 0x658 <__udivmodsi4>
 574:	a7 e2       	ldi	r26, 0x27	; 39
	
	static task task1, task2;
	task *tasks[] = {&task1, &task2};
 576:	b1 e0       	ldi	r27, 0x01	; 1
 578:	ba 83       	std	Y+2, r27	; 0x02
 57a:	a9 83       	std	Y+1, r26	; 0x01
 57c:	ec e1       	ldi	r30, 0x1C	; 28
 57e:	f1 e0       	ldi	r31, 0x01	; 1
 580:	fc 83       	std	Y+4, r31	; 0x04
 582:	eb 83       	std	Y+3, r30	; 0x03
 584:	8f ef       	ldi	r24, 0xFF	; 255
	const unsigned short numTasks = sizeof (tasks)/ sizeof(task*);
		
	//Task 1
	task1.state = -1; //task initial state
 586:	8c 93       	st	X, r24
 588:	11 96       	adiw	r26, 0x01	; 1
	task1.period = SMTick1_period;
 58a:	8d 92       	st	X+, r8
 58c:	9d 92       	st	X+, r9
 58e:	ad 92       	st	X+, r10
 590:	bc 92       	st	X, r11
 592:	14 97       	sbiw	r26, 0x04	; 4
 594:	15 96       	adiw	r26, 0x05	; 5
	task1.elapsedTime = SMTick1_period;
 596:	8d 92       	st	X+, r8
 598:	9d 92       	st	X+, r9
 59a:	ad 92       	st	X+, r10
 59c:	bc 92       	st	X, r11
 59e:	18 97       	sbiw	r26, 0x08	; 8
 5a0:	67 e3       	ldi	r22, 0x37	; 55
	task1.TickFct = &SMTick1;
 5a2:	71 e0       	ldi	r23, 0x01	; 1
 5a4:	1a 96       	adiw	r26, 0x0a	; 10
 5a6:	7c 93       	st	X, r23
 5a8:	6e 93       	st	-X, r22
 5aa:	19 97       	sbiw	r26, 0x09	; 9
 5ac:	80 83       	st	Z, r24
	
	//Task 2
	task2.state = -1; //task initial state
 5ae:	21 83       	std	Z+1, r18	; 0x01
	task2.period = SMTick2_period;
 5b0:	32 83       	std	Z+2, r19	; 0x02
 5b2:	43 83       	std	Z+3, r20	; 0x03
 5b4:	54 83       	std	Z+4, r21	; 0x04
 5b6:	25 83       	std	Z+5, r18	; 0x05
	task2.elapsedTime = SMTick2_period;
 5b8:	36 83       	std	Z+6, r19	; 0x06
 5ba:	47 83       	std	Z+7, r20	; 0x07
 5bc:	50 87       	std	Z+8, r21	; 0x08
 5be:	84 ea       	ldi	r24, 0xA4	; 164
	task2.TickFct = &SMTick2;
 5c0:	91 e0       	ldi	r25, 0x01	; 1
 5c2:	92 87       	std	Z+10, r25	; 0x0a
 5c4:	81 87       	std	Z+9, r24	; 0x09
	
	TimerSet(GCD);
 5c6:	6e 2d       	mov	r22, r14
 5c8:	7f 2d       	mov	r23, r15
 5ca:	80 2f       	mov	r24, r16
 5cc:	91 2f       	mov	r25, r17
 5ce:	90 dd       	rcall	.-1248   	; 0xf0 <TimerSet>
	TimerOn();
 5d0:	a0 dd       	rcall	.-1216   	; 0x112 <TimerOn>
 5d2:	7e 01       	movw	r14, r28
 5d4:	85 e0       	ldi	r24, 0x05	; 5
 5d6:	e8 0e       	add	r14, r24
 5d8:	f1 1c       	adc	r15, r1
 5da:	de 01       	movw	r26, r28
 5dc:	11 96       	adiw	r26, 0x01	; 1
 5de:	6d 01       	movw	r12, r26
 5e0:	f6 01       	movw	r30, r12
	
    while (1) 
    {
		for ( i = 0; i < numTasks; i++)
		{
			if(tasks[i]->elapsedTime == tasks[i]->period)
 5e2:	01 91       	ld	r16, Z+
 5e4:	11 91       	ld	r17, Z+
 5e6:	6f 01       	movw	r12, r30
 5e8:	d8 01       	movw	r26, r16
 5ea:	15 96       	adiw	r26, 0x05	; 5
 5ec:	4d 91       	ld	r20, X+
 5ee:	5d 91       	ld	r21, X+
 5f0:	6d 91       	ld	r22, X+
 5f2:	7c 91       	ld	r23, X
 5f4:	18 97       	sbiw	r26, 0x08	; 8
 5f6:	11 96       	adiw	r26, 0x01	; 1
 5f8:	8d 91       	ld	r24, X+
 5fa:	9d 91       	ld	r25, X+
 5fc:	0d 90       	ld	r0, X+
 5fe:	bc 91       	ld	r27, X
 600:	a0 2d       	mov	r26, r0
 602:	48 17       	cp	r20, r24
 604:	59 07       	cpc	r21, r25
 606:	6a 07       	cpc	r22, r26
 608:	7b 07       	cpc	r23, r27
 60a:	81 f4       	brne	.+32     	; 0x62c <main+0x146>
 60c:	f8 01       	movw	r30, r16
			{
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 60e:	80 81       	ld	r24, Z
 610:	01 84       	ldd	r0, Z+9	; 0x09
 612:	f2 85       	ldd	r31, Z+10	; 0x0a
 614:	e0 2d       	mov	r30, r0
 616:	08 2e       	mov	r0, r24
 618:	00 0c       	add	r0, r0
 61a:	99 0b       	sbc	r25, r25
 61c:	09 95       	icall
 61e:	d8 01       	movw	r26, r16
 620:	8c 93       	st	X, r24
 622:	f8 01       	movw	r30, r16
				tasks[i]->elapsedTime = 0;
 624:	15 82       	std	Z+5, r1	; 0x05
 626:	16 82       	std	Z+6, r1	; 0x06
 628:	17 82       	std	Z+7, r1	; 0x07
 62a:	10 86       	std	Z+8, r1	; 0x08
 62c:	f8 01       	movw	r30, r16
			}
			tasks[i]->elapsedTime += 1;
 62e:	85 81       	ldd	r24, Z+5	; 0x05
 630:	96 81       	ldd	r25, Z+6	; 0x06
 632:	a7 81       	ldd	r26, Z+7	; 0x07
 634:	b0 85       	ldd	r27, Z+8	; 0x08
 636:	01 96       	adiw	r24, 0x01	; 1
 638:	a1 1d       	adc	r26, r1
 63a:	b1 1d       	adc	r27, r1
 63c:	85 83       	std	Z+5, r24	; 0x05
 63e:	96 83       	std	Z+6, r25	; 0x06
 640:	a7 83       	std	Z+7, r26	; 0x07
 642:	b0 87       	std	Z+8, r27	; 0x08
 644:	ce 14       	cp	r12, r14
	
	unsigned short i;
	
    while (1) 
    {
		for ( i = 0; i < numTasks; i++)
 646:	df 04       	cpc	r13, r15
 648:	59 f6       	brne	.-106    	; 0x5e0 <main+0xfa>
 64a:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <TimerFlag>
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while (!TimerFlag);
 64e:	88 23       	and	r24, r24
 650:	e1 f3       	breq	.-8      	; 0x64a <main+0x164>
 652:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <TimerFlag>
		TimerFlag = 0;
 656:	c1 cf       	rjmp	.-126    	; 0x5da <main+0xf4>

00000658 <__udivmodsi4>:
    }
 658:	a1 e2       	ldi	r26, 0x21	; 33
 65a:	1a 2e       	mov	r1, r26
 65c:	aa 1b       	sub	r26, r26
 65e:	bb 1b       	sub	r27, r27
 660:	fd 01       	movw	r30, r26
 662:	0d c0       	rjmp	.+26     	; 0x67e <__udivmodsi4_ep>

00000664 <__udivmodsi4_loop>:
 664:	aa 1f       	adc	r26, r26
 666:	bb 1f       	adc	r27, r27
 668:	ee 1f       	adc	r30, r30
 66a:	ff 1f       	adc	r31, r31
 66c:	a2 17       	cp	r26, r18
 66e:	b3 07       	cpc	r27, r19
 670:	e4 07       	cpc	r30, r20
 672:	f5 07       	cpc	r31, r21
 674:	20 f0       	brcs	.+8      	; 0x67e <__udivmodsi4_ep>
 676:	a2 1b       	sub	r26, r18
 678:	b3 0b       	sbc	r27, r19
 67a:	e4 0b       	sbc	r30, r20
 67c:	f5 0b       	sbc	r31, r21

0000067e <__udivmodsi4_ep>:
 67e:	66 1f       	adc	r22, r22
 680:	77 1f       	adc	r23, r23
 682:	88 1f       	adc	r24, r24
 684:	99 1f       	adc	r25, r25
 686:	1a 94       	dec	r1
 688:	69 f7       	brne	.-38     	; 0x664 <__udivmodsi4_loop>
 68a:	60 95       	com	r22
 68c:	70 95       	com	r23
 68e:	80 95       	com	r24
 690:	90 95       	com	r25
 692:	9b 01       	movw	r18, r22
 694:	ac 01       	movw	r20, r24
 696:	bd 01       	movw	r22, r26
 698:	cf 01       	movw	r24, r30
 69a:	08 95       	ret

0000069c <__tablejump2__>:
 69c:	ee 0f       	add	r30, r30
 69e:	ff 1f       	adc	r31, r31
 6a0:	00 24       	eor	r0, r0
 6a2:	00 1c       	adc	r0, r0
 6a4:	0b be       	out	0x3b, r0	; 59
 6a6:	07 90       	elpm	r0, Z+
 6a8:	f6 91       	elpm	r31, Z
 6aa:	e0 2d       	mov	r30, r0
 6ac:	09 94       	ijmp

000006ae <_exit>:
 6ae:	f8 94       	cli

000006b0 <__stop_program>:
 6b0:	ff cf       	rjmp	.-2      	; 0x6b0 <__stop_program>
